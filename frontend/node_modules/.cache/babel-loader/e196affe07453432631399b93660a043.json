{"ast":null,"code":"import { CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, CREATE_ORDER_FAIL, MY_ORDERS_REQUEST, MY_ORDERS_SUCCESS, MY_ORDERS_FAIL, ALL_ORDERS_REQUEST, ALL_ORDERS_SUCCESS, ALL_ORDERS_FAIL, UPDATE_ORDER_SUCCESS, UPDATE_ORDER_REQUEST, UPDATE_ORDER_FAIL, DELETE_ORDER_REQUEST, DELETE_ORDER_SUCCESS, DELETE_ORDER_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, CLEAR_ERRORS } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/order/new', order, config);\n    dispatch({\n      type: CREATE_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get curretly logged in user orders\n\nexport const myOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: MY_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/v1/orders/me');\n    dispatch({\n      type: MY_ORDERS_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get order details\n\nexport const getOrderDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/order/${id}`);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data.order\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get all orders - ADMIN\n\nexport const allOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/admin/orders`);\n    dispatch({\n      type: ALL_ORDERS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_ORDERS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // update order\n\nexport const updateOrder = (id, orderData) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/admin/order/${id}`, orderData, config);\n    dispatch({\n      type: UPDATE_ORDER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Delete order\n\nexport const deleteOrder = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_ORDER_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/admin/order/${id}`);\n    dispatch({\n      type: DELETE_ORDER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Clear Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["C:/Users/Trilochan Kandel/Desktop/New folder (2)/shopit/frontend/src/actions/orderActions.js"],"names":["CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_REQUEST","UPDATE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","CLEAR_ERRORS","createOrder","order","dispatch","getState","type","config","headers","data","axios","post","payload","error","response","message","myOrders","get","orders","getOrderDetails","id","allOrders","updateOrder","orderData","put","success","deleteOrder","delete","clearErrors"],"mappings":"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","sourcesContent":["\r\nimport {\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    CREATE_ORDER_FAIL,\r\n    MY_ORDERS_REQUEST,\r\n    MY_ORDERS_SUCCESS,\r\n    MY_ORDERS_FAIL,\r\n    ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_FAIL,\r\n    DELETE_ORDER_REQUEST,\r\n    DELETE_ORDER_SUCCESS,\r\n    DELETE_ORDER_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: CREATE_ORDER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/order/new', order, config)\r\n\r\n        dispatch({\r\n            type: CREATE_ORDER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get curretly logged in user orders\r\nexport const myOrders = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: MY_ORDERS_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/v1/orders/me')\r\n\r\n        dispatch({\r\n            type: MY_ORDERS_SUCCESS,\r\n            payload: data.orders\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MY_ORDERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get order details\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/order/${id}`)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data.order\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get all orders - ADMIN\r\nexport const allOrders = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_ORDERS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/orders`)\r\n\r\n        dispatch({\r\n            type: ALL_ORDERS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_ORDERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// update order\r\nexport const updateOrder = (id, orderData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_ORDER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/order/${id}`, orderData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_ORDER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete order\r\nexport const deleteOrder = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_ORDER_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/order/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_ORDER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}